spring.jackson.serialization.fail-on-empty-beans=false
# ===============================
# = DATA SOURCE MySQL FMS
# ===============================
#mysql.jdbcUrl = jdbc:mysql://10.10.1.170:3306/fms_uat_askred_for_prod?serverTimezone=UTC
#mysql.username = erpuser
#mysql.password = balicamp123
#mysql.datasource.driver-class-name = com.mysql.jdbc.Driver
#mysql.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# ===============================
# = DATA SOURCE Postgre SQL Portal
# ===============================
#PROD
postgre.jdbcUrl = jdbc:postgresql://10.220.20.56:5432/kmk_pen
postgre.username = postgres
postgre.password = askrindo
#DEV LOCAL
#postgre.jdbcUrl = jdbc:postgresql://localhost:5432/kmk_pen
#postgre.username = askrindouser
#postgre.password = v_kC/24#^eHEU8d#
postgre.datasource.driver-class-name = org.postgresql.Driver
postgre.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# ===============================
# = DATA SOURCE SYBase ASE SAA DEV
# ===============================
#PROD
sybase.jdbcUrl = jdbc:jtds:sybase://10.10.1.91:5000/saa_central
sybase.username = AplikasiSpender
sybase.password = Ask@1234
#DEV
#sybase.jdbcUrl = jdbc:jtds:sybase://10.10.1.52:5000/dummy_saa
#sybase.username = anggoro
#sybase.password = Ask@1234
sybase.driverClassName = net.sourceforge.jtds.jdbc.Driver
sybase.jpa.properties.hibernate.dialect = org.hibernate.dialect.SybaseDialect
spring.datasource.testWhileIdle = true
spring.datasource.testOnBorrow=true
spring.datasource.validationInterval = 60000
spring.datasource.validationQuery=SELECT 1
#Khusus Untuk Spring boot 2
sybase.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.max-active=377
spring.datasource.max-wait=1000
spring.datasource.max-idle=233
spring.datasource.min-idle=89
spring.datasource.timeBetweenEvictionRunsMillis = 60000
spring.datasource.minEvictableIdleTimeMillis = 55000
removeAbandoned = true
removeAbandonedTimeout = 180
#spring.jpa.open-in-view=false

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql = false
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.format_sql=false

spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.properties.hibernate.default_schema=dbo

spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true

spring.jpa.properties.hibernate.generate_statistics=true



# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
# Define a custom port instead of the default 8080
server.port=8005

# Tell Spring Security (if used) to require requests over HTTPS
#security.require-ssl=true

# The format used for the keystore
#server.ssl.key-store-type=JKS
# The path to the keystore containing the certificate
#server.ssl.key-store=classpath:subrogasi.p12
# The password used to generate the certificate
#server.ssl.key-store-password=password
# The alias mapped to the certificate
#server.ssl.key-alias=subrogasi

#server.ssl.key-alias=tomcat
#server.ssl.key-password=password123
#server.ssl.key-store=classpath:subrogasi.jks
#server.ssl.key-store-provider=SUN
#server.ssl.key-store-type=JKS

debug = false

#logging.level.org.hibernate.SQL=DEBUG

#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.org.hibernate.type=TRACE

#logging.level.root=DEBUG
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=ERROR

logging.level.jdbc.sqlonly=info
logging.level.jdbc.resultsettable=info
logging.level.jdbc.sqltiming=fatal
logging.level.jdbc.audit=fatal
logging.level.jdbc.resultset=fatal
logging.level.jdbc.connection=fatal

# ==============================================================
# = Attcahment Files
# ==============================================================

# Set the file size limit (default 1Mb). If you want to specify that files be
# unlimited set the multipart.maxFileSize property to -1.
#multipart.maxFileSize = 3Mb

# Set the total request size for a multipart/form-data (default 10Mb)
#multipart.maxRequestSize = 20Mb

spring.http.multipart.max-file-size = 10MB
spring.http.multipart.max-request-size = 10MB
#spring.jackson.date-format = dd-MM-yyyy

# ==============================================================
# = Logging
# ==============================================================
logging.file=/log/SPAFMS.log

# ===============================
# = Spring MVC
# ===============================
# Prevent @ModelAttributes to be shown in URL
spring.mvc.ignore-default-model-on-redirect=true

spring.mvc.locale=id_ID
spring.mvc.localeResolver=fixed

apps.development = false

#==========================================
#= Setting Oauth2
#==========================================
user.oauth.clientId=javadevjournal
user.oauth.clientSecret=1234$#@!
user.oauth.redirectUris=http://localhost:8005/login
user.oauth.user.username=javadevjournal
user.oauth.user.password=javadevjournal
user.oauth.accessTokenValidity=300
user.oauth.refreshTokenValidity=240000